name: Build Executable

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Download FFmpeg
      run: |
        # Download FFmpeg static build
        Invoke-WebRequest -Uri "https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip" -OutFile "ffmpeg.zip"
        Expand-Archive -Path "ffmpeg.zip" -DestinationPath "."
        $ffmpegDir = Get-ChildItem -Directory -Name "ffmpeg-master-*" | Select-Object -First 1
        if ($ffmpegDir) {
          Copy-Item "$ffmpegDir\bin\ffmpeg.exe" -Destination "."
          Copy-Item "$ffmpegDir\bin\ffprobe.exe" -Destination "."
          Write-Host "FFmpeg copied successfully"
        }
        Remove-Item "ffmpeg.zip" -ErrorAction SilentlyContinue
        if ($ffmpegDir) { Remove-Item $ffmpegDir -Recurse -Force -ErrorAction SilentlyContinue }
      shell: powershell
    
    - name: Verify FFmpeg
      run: |
        if (Test-Path "ffmpeg.exe") {
          Write-Host "‚úÖ ffmpeg.exe found"
        } else {
          Write-Host "‚ùå ffmpeg.exe not found"
          exit 1
        }
        if (Test-Path "ffprobe.exe") {
          Write-Host "‚úÖ ffprobe.exe found"  
        } else {
          Write-Host "‚ùå ffprobe.exe not found"
          exit 1
        }
      shell: powershell
    
    - name: Build with PyInstaller
      run: |
        # Build executable with FFmpeg support
        pyinstaller --clean --onefile --windowed ^
          --add-binary "ffmpeg.exe;." ^
          --add-binary "ffprobe.exe;." ^
          --add-data "README.md;." ^
          --icon "icon.ico" ^
          --hidden-import=pydub ^
          --hidden-import=pyloudnorm ^
          --hidden-import=numpy ^
          --hidden-import=pygame ^
          --hidden-import=PyQt5 ^
          --name "UnrealAudioNormalizer" ^
          main.py
      shell: cmd
    
    - name: Verify build
      run: |
        if (Test-Path "dist\UnrealAudioNormalizer.exe") {
          Write-Host "‚úÖ Build successful!"
          $size = (Get-Item "dist\UnrealAudioNormalizer.exe").Length / 1MB
          Write-Host "üì¶ Executable size: $([math]::Round($size, 2)) MB"
        } else {
          Write-Host "‚ùå Build failed - executable not found"
          exit 1
        }
      shell: powershell
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: UnrealAudioNormalizer-Windows
        path: dist/UnrealAudioNormalizer.exe
        retention-days: 90
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        body: |
          üéâ **Unreal Audio Normalizer** ${{ github.ref_name }}
          
          ## ‚ú® Features
          - Professional LUFS audio normalization
          - Batch processing support
          - MP3, WAV, FLAC, OGG support
          - Built-in audio preview
          - Custom LUFS presets
          
          ## üì• Download
          Download `UnrealAudioNormalizer.exe` below and run directly - no installation required!
          
          ## üîß Requirements
          - Windows 10/11 (64-bit)
          - No additional software needed
    
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/UnrealAudioNormalizer.exe
        asset_name: UnrealAudioNormalizer.exe
        asset_content_type: application/octet-stream
